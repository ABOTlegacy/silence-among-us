name: Build and Publish

on:
  push:
    branches:
      - main
      - beta

env:
  IMAGE_NAME: silence-among-us

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi
        # TODO Test correctly

  release:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        id: semantic
        with:
          semantic_version: 17.1.2
          extra_plugins: |
            conventional-changelog-eslint
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GH_TOKEN }}

      - name: Publish image
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |

          # Determine the fully-qualified image id, with the repository
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Build the image
          docker pull $IMAGE_ID
          docker build . --tag $IMAGE_NAME --cache-from $IMAGE_ID

          # Log into container registry
          echo "${{ secrets.PACKAGE_WRITE_TOKEN }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

          # Get the version.
          VERSION=${{ steps.semantic.outputs.new_release_version }}

          # Get the channel
          CHANNEL=${{ steps.semantic.outputs.new_release_channel }}
          [ -z "$CHANNEL" ] && CHANNEL=latest

          echo IMAGE_ID=$IMAGE_ID
          echo CHANNEL=$CHANNEL
          echo VERSION=$VERSION

          # Release the specific version
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

          # Release the channel tag
          docker tag $IMAGE_NAME $IMAGE_ID:$CHANNEL
          docker push $IMAGE_ID:$CHANNEL

  deploy:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Redeploy Bot
        uses: JimCronqvist/action-ssh@0.1.1
        with:
          hosts: amongus.tanndev.com
          privateKey: ${{ secrets.DEPLOYMENT_SSH_KEY }}
          command: |
            cd /sau
            echo "${{ secrets.PACKAGE_READ_TOKEN }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin
            docker-compose pull
            docker-compose up -d
            # TODO Reconfigure the deployment, rather than assuming it's there and working.