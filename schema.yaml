openapi: 3.0.0

info:
  version: Unreleased
  title: Silence Among Us
  description: |
    Discord channel manager for Among Us.
    See the [README](https://github.com/tanndev/silence-among-us#silence-among-us) for more information.

  contact:
    name: James Tanner
    url: https://github.com/tanndev/silence-among-us

servers:
  - description: Current
    url: /api

tags:
  - name: Info
  - name: Capture
  - name: Lobby
  - name: Player

paths:
  /:
    get:
      operationId: getInfo
      summary: Get info about this server
      tags: [Info]
      description: Get information about this server
      responses:
        '200':
          description: Details about the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    description: Version of the app.
                    example: 1.0.0
                  guildsSupported:
                    type: number
                    description: How many guilds are currently supported by the server.

  /capture/download:
    get:
      operationId: downloadCaptureApp
      summary: Download a compatible version of AmongUsCapture
      tags: [Capture]
      description: |
        Download a compatible version of [AmongUsCapture](https://github.com/denverquane/amonguscapture)

        The provided version may or may not be a standard release version, as Silence Among Us is developed in
        cooperation with AmongUsCapture and may leverage unpublished features from time to time.
      responses:
        '200':
          description: An `AmongUsCapture.exe` executable.
          content:
            text/plain:
              schema:
                type: string
                format: binary

  /lobby/{voiceChannelId}:
    parameters:
      - $ref: "#/components/parameters/voiceChannelId"
    get:
      deprecated: true
      operationId: getLobbyInformation
      summary: Get information about a lobby.
      tags: [Lobby]
      description: |
        Returns information about the lobby currently being tracked.
      responses:
        "200":
          description: The lobby information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lobby"
        "404":
          $ref: "#/components/responses/404NotFoundError"
        "4XX":
          $ref: "#/components/responses/4xxClientError"
        "5XX":
          $ref: "#/components/responses/5xxInternalError"

  /lobby/{voiceChannelId}/{playerId}/kill:
    parameters:
      - $ref: "#/components/parameters/voiceChannelId"
      - $ref: "#/components/parameters/playerId"
    get:
      deprecated: true
      operationId: killLobbyPlayer
      summary: Kill a player in the lobby
      tags: [Lobby, Player]
      description: |
        Kills the specified player in the lobby.
      responses:
        "200":
          description: The updated player information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Player"
        "404":
          $ref: "#/components/responses/404NotFoundError"
        "4XX":
          $ref: "#/components/responses/4xxClientError"
        "5XX":
          $ref: "#/components/responses/5xxInternalError"

components:
  parameters:
    voiceChannelId:
      description: Unique ID of the Discord channel and related lobby.
      in: path
      name: voiceChannelId
      required: true
      schema:
        $ref: "#/components/schemas/Lobby/properties/voiceChannelId"
    playerId:
      description: Unique ID of the player.
      in: path
      name: playerId
      required: true
      schema:
        $ref: "#/components/schemas/Player/properties/discordId"

  responses:
    404NotFoundError:
      description: The requested resource wasn't found.
    4xxClientError:
      description: Something was wrong with the request.
    5xxInternalError:
      description: Something went wrong in the server.

  schemas:
    Lobby:
      type: object
      description: |
        Information about a single Discord channel being tracked as a game, along with game-state information for
        automatically muting/unmuting players.

        A lobby is built around a single Discord voice channel, and assumes that anyone joining that channel is
        playing that game. So the `voiceChannelId` is also used as a lobby id.
      required: [voiceChannelId, phase, players]
      additionalProperties: false
      properties:
        voiceChannelId:
          type: string
          description: The id of the Discord voice channel being used for the game.
        textChannelId:
          type: string
          description: The ID of the Discord text channel where updates should be posted.
        phase:
          type: string
          description: |
            The current phase of the lobby, as one of the following values:
            - `Intermission`: Between games
              - Everyone can talk.
              - New players join as living.
            - `Working`: In game, while the crew are performing tasks
              - Living players are muted and deafened.
              - Dead players are unmuted and can talk to each other.
              - Other players are muted/unmuted according to settings.
              - New players join as waiting.
            - `Meeting`: In game, during a meeting
              - Living players can talk.
              - Dead layers are muted.
              - Other players are muted/unmuted according to settings.
          enum: [intermission, working, meeting]
        players:
          type: array
          description: List of all players currently (or recently) in the channel.
          items:
            $ref: "#/components/schemas/Player"
        room:
          $ref: "#/components/schemas/Room"

    Player:
      type: object
      description: Information about a player, their current state in game, and their voice channel.
      required: [status, id]
      additionalProperties: false
      properties:
        id:
          type: string
          description: Unique ID for the player.
          readOnly: true
        status:
          type: string
          description: |
            The current status of the player, with one of the following values:
            - `Living`: Alive in-game, or in intermission.
            - `Dead`: Dead in-game. (Will change to `living` at next intermission.)
            - `Waiting`: Joined while a game was in progress. (Will change to `living` at next intermission.)
            - `Spectating`: Not playing the game, but still in the voice channel.
          enum: [Living, Dead, Waiting, Spectating]
        discordId:
          type: string
          description: The player's unique ID in Discord
        discordName:
          type: string
          description: The player's display name in Discord
        amongUsName:
          type: string
          description: (Optional) The player's name in-game.
        amongUsColor:
          type: string
          description: (Optional) the player's color in-game.
          enum: [Red, Blue, Green, Pink, Orange, Yellow, Black, White, Purple, Brown, Cyan, Lime]

    Room:
      type: object
      description: (Optional) Game room in Among Us
      required: [code, region]
      additionalProperties: false
      nullable: true
      properties:
        code:
          type: string
          description: The room code of the game, for players to join.
          pattern: '^[A-Z]{6}$'
          example: ABCDEF
        region:
          type: string
          description: The region where the game is hosted.
          default: North America
          enum:
            - North America
            - Europe
            - Asia